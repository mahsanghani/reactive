// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findindex

import React from 'react'
import ReactDOM from 'react-dom'

//ReactDOM.render(WHAT DO I WANT TO RENDER, WHERE DO I WANT TO RENDER IT)
//https://scrimba.com/p/p7P5Hd/cepwWUp

 sorry for storytime.

function App() {
  return(
    ReactDOM.render(<h1>Hello World!</h1>, document.getElementId("root"))
		);
}

function App() {
  return(
   		// JSX
      ReactDOM.render(<div><h1>Hello world!</h1><p>This is a paragraph</p></div>, document.getElementById("root"))

      var myNewP = document.createElement("p")
      myNewP.innerHTML = "This is a paragraph."
		);
}

function App() {
  return(
		<h1>Hello World!</h1>
    <p>bae is good at stats</p>
  )
}

function App() {
  return (
      <div>
          <h1>Hello World!</h1>
          <p>bae is good at stats</p>
      </div>
      document.getElementbyId("root")
  );
}

function MyApp() {
  return (
    <ul>
       <li>1</li>
       <li>2</li>
       <li>3</li>
    </ul>
)}

ReactDOM.render(
   <MyApp />,
   document.getElementById("root")
)

function MyInfo(){
    return(
    <div>
        <h1>me</h1>
        <p>about me</p>
        <ul>
            <li>khi</li>
            <li>lhr</li>
            <li>isl</li>
        </ul>
    </div>
)
}

export default MyInfo;

function App() {
  return (
    <div>
      <nav>
        <h1>Hello a third time!</h1>
        <ul>
          <li>Thing 1</li>
          <li>Thing 2</li>
          <li>Thing 3</li>
        </ul>
      </nav>
      <main>
        <p>This is where most of my content will go...</p>
      </main>
    </div>
  )
}

export default App


import React from 'react';
import './App.css';

import Header from "./components/Header"
import MainContent from "./components/MainContent"
import Footer from "./components/Footer"

function App() {
    return (
        <div>
            <Header/>
            <MainContent/>
            <Footer/>
        </div>
    )
}

export default App

import React from "react"

function Header() {
    return (
        <header>This is the header</header>
    )
}

export default Header

import React from "react"

function Footer() {
    return (
        <footer>This is the footer</footer>
    )
}

export default Footer

import React from "react"

function MainContent() {
    return (
        <main>This is the main section</main>
    )
}

export default MainContent

import React from "react"

function App() {
    return(
        <div>
            <input type="checkbox" />
            <p>Placeholder text here</p>

            <input type="checkbox" />
            <p>Placeholder text here</p>

            <input type="checkbox" />
            <p>Placeholder text here</p>

            <input type="checkbox" />
            <p>Placeholder text here</p>
        </div>
    )
}

export default App;

import React from "react"

function App() {
    const first = "Ahsan"
    const last = "Ghani"
    const date = new Date()
    const hours = date.getHours()
    let timeOfDay

    if (hours<12)
    {
        timeOfDay = "morning"
    }else if (hours >= 12 && hours < 17){
        timeOfDay = "afternoon"
    }else{
        timeOfDay = "night"
    }

    const styles = {
        color: "#FF8C00",
        backgroundColor: "#FF2D00",
        fontSize: "200px"
    }

    return (
        <div>
        <h1 style={styles}>Hello {first + " " + last}!</h1>
        <p style={styles}>It is currently about {date.getHours() % 12} in the {timeOfDay}!</p>
        </div>
    )
}

export default App

import React from "react"

function ContactCard(props) {
    console.log(props)
    return (
        <div className="contact-card">
            <img src={props.contact.imgUrl}/>
            <h3>{props.contact.name}</h3>
            <p>Phone: {props.contact.phone}</p>
            <p>Email: {props.contact.email}</p>
        </div>
    )
}

export default ContactCard

import React from "react"

function App() {
    return (
        <div className="contacts">
            <div className="contact-card">
                <img src="http://placekitten.com/300/200"/>
                <h3>Mr. Whiskerson</h3>
                <p>Phone: (212) 555-1234</p>
                <p>Email: mr.whiskaz@catnap.meow</p>
            </div>

            <div className="contact-card">
                <img src="http://placekitten.com/400/200"/>
                <h3>Fluffykins</h3>
                <p>Phone: (212) 555-2345</p>
                <p>Email: fluff@me.com</p>
            </div>f

            <div className="contact-card">
                <img src="http://placekitten.com/400/300"/>
                <h3>Destroyer</h3>
                <p>Phone: (212) 555-3456</p>
                <p>Email: ofworlds@yahoo.com</p>
            </div>

            <div className="contact-card">
                <img src="http://placekitten.com/200/100"/>
                <h3>Felix</h3>
                <p>Phone: (212) 555-4567</p>
                <p>Email: thecat@hotmail.com</p>
            </div>
        </div>
    )
}

export default App

import React from "react"
import ContactCard from "./components/ContactCard.js"

function App() {
    return (
        <div className="contacts">
            <ContactCard
                contact={{name: "Mr. Whiskerson", imgUrl: "http://placekitten.com/300/200", phone: "(212) 555-1234", email: "mr.whiskaz@catnap.meow"}}
            />

            <ContactCard
                contact={{name: "Fluffykins", imgUrl: "http://placekitten.com/400/200", phone: "(212) 555-2345", email: "fluff@me.com"}}
            />

            <ContactCard
                contact={{name: "Destroyer", imgUrl: "http://placekitten.com/400/300", phone: "(212) 555-3456", email: "ofworlds@yahoo.com"}}
            />

            <ContactCard
                contact={{name: "Felix", imgUrl: "http://placekitten.com/200/100", phone: "(212) 555-4567", email: "thecat@hotmail.com"}}
            />

        </div>
    )
}

export default App

import React from "react"

function Joke(props) {
    return(
        <div>
            <h3 style={{display: props.question ? "block" : "none"}}>Question: {props.question}</h3>
            <h3 style={{display: !props.question && "none"}}>Question: {props.question}</h3>
            <h3 style={{display: !props.question && "#888888"}}>Answer: {props.answer}</h3>
            <hr/>
        </div>
    )
}

export default Joke

import React from "react"
import Joke from "./components/Joke.js"

function App() {
    return (
        <div>
            <Joke question={"1"} answer={"2"}/>
            <Joke question={"3"} answer={"4"}/>
            <Joke question={"5"} answer={"6"}/>
            <Joke question={"7"} answer={"8"}/>
            <Joke question={"9"} answer={"0"}/>

            <Joke punchLine="It’s hard to explain puns to kleptomaniacs because they always take things literally." />
            <Joke question="What's the best thing about Switzerland?" punchLine="I don't know, but the flag is a big plus!"/>
            <Joke question="Did you hear about the mathematician who's afraid of negative numbers?" punchLine="He'll stop at nothing to avoid them!"/>
            <Joke question="Hear about the new restaurant called Karma?" punchLine="There’s no menu: You get what you deserve."/>
            <Joke question="Did you hear about the actor who fell through the floorboards?" punchLine="He was just going through a stage."/>
            <Joke question="Did you hear about the claustrophobic astronaut?" punchLine="He just needed a little space."/>
        </div>
    )
}

export default App

import React from "react"

function App() {

    const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    const doubled = nums.map(function(num) {
        return num * 2
    })
    console.log(doubled)
    return (
        doubled
    )
}

export default App

const jokesData = [
    {
        id: 1,
        answer: "It’s hard to explain puns to kleptomaniacs because they always take things literally."
    },
    {
        id: 2,
        question: "What's the best thing about Switzerland?",
        answer: "I don't know, but the flag is a big plus!"
    },
    {
        id: 3,
        question: "Did you hear about the mathematician who's afraid of negative numbers?",
        answer: "He'll stop at nothing to avoid them!"
    },
    {
        id: 4,
        question: "Hear about the new restaurant called Karma?",
        answer: "There’s no menu: You get what you deserve."
    },
    {
        id: 5,
        question: "Did you hear about the actor who fell through the floorboards?",
        answer: "He was just going through a stage."
    },
    {
        id: 6,
        question: "Did you hear about the claustrophobic astronaut?",
        answer: "He just needed a little space."
    }
]

export default jokesData

import React from "react"
import Joke from "./components/Joke.js"
import joke from "./components/JokesData.js"
import jokesData from "./components/JokesData";

function App() {
    const JokeComponents = jokesData.map((joke ) => {
        return(
            <Joke key={joke.id} question={joke.question} answer={joke.answer} />
        )
    })

    return(
        <div>
            {JokeComponents}
        </div>
    )
}

export default App

import React from "react"

function Product(props) {
    return(
        <div>
            <h2>{props.product.name}</h2>
            <p>{props.product.price.toLocaleString("en-US",{style:"currency",currency:"USD"})} - {props.product.description}</p>
        </div>
                )}


export default Product

const products = [
    {
        id: "1",
        name: "Pencil",
        price: 1,
        description: "Perfect for those who can't remember things! 5/5 Highly recommend."
    },
    {
        id: "2",
        name: "Housing",
        price: 0,
        description: "Housing provided for out-of-state students or those who can't commute"
    },
    {
        id: "3",
        name: "Computer Rental",
        price: 300,
        description: "Don't have a computer? No problem!"
    },
    {
        id: "4",
        name: "Coffee",
        price: 2,
        description: "Wake up!"
    },
    {
        id: "5",
        name: "Snacks",
        price: 0,
        description: "Free snacks!"
    },
    {
        id: "6",
        name: "Rubber Duckies",
        price: 3.50,
        description: "To help you solve your hardest coding problems."
    },
    {
        id: "7",
        name: "Fidget Spinner",
        price: 21.99,
        description: "Because we like to pretend we're in high school."
    },
    {
        id: "8",
        name: "Sticker Set",
        price: 14.99,
        description: "To prove to other devs you know a lot."
    }
]

export default products

import React from "react"
import products from "./components/products.js"
import Product from "./components/product.js"

function App() {
    const productComponents = products.map(item => <Product key={item.id} product={item}/>)

    return(
        <div>
            {productComponents}
        </div>
    )
}

export default App

import React from "react"

function TodoItem(props) {
    return (
        <div className="todo-item">
            <input type="checkbox" checked={props.item.completed} />
            <p>{props.item.text}</p>
        </div>
    )
}

export default TodoItem

const todosData = [
    {
        id: 1,
        text: "Take out the trash",
        completed: true
    },
    {
        id: 2,
        text: "Grocery shopping",
        completed: false
    },
    {
        id: 3,
        text: "Clean gecko tank",
        completed: false
    },
    {
        id: 4,
        text: "Mow lawn",
        completed: true
    },
    {
        id: 5,
        text: "Catch up on Arrested Development",
        completed: false
    }
]

export default todosData

import React from "react"
import TodoItem from "./components/TodoItem.js"
import todosData from "./components/todosData.js"

function App() {
    const todoItems = todosData.map(item => <TodoItem key={item.id} item={item}/>)

    return(
        <div className={"todo-list"}>
            {todoItems}
        </div>
    )
}

export default App

import React, {Component} from "react"
import ReactDOM from "react-dom"

// #1
class App extends React.Component {
    render() {
        return (
            <div>
                <Header username="vschool"/>
                <Greeting />
            </div>
        )
    }
}

// #2
class Header extends React.Component {
    render() {
        return (
            <header>
                <p>Welcome, {this.props.username}!</p>
            </header>
        )
    }
}

// #3
class Greeting extends Component {
    render() {
        const date = new Date()
        const hours = date.getHours()
        let timeOfDay

        if (hours < 12) {
            timeOfDay = "morning"
        } else if (hours >= 12 && hours < 17) {
            timeOfDay = "afternoon"
        } else {
            timeOfDay = "night"
        }
        return (
            <h1>Good {timeOfDay} to you, sir or madam!</h1>
        )
    }
}

export default App;

import React from "react";

// https://scrimba.com/p/p4Mrt9/cQnMDHD

class App extends React.Component {
    constructor() {
        super()
        this.state = {
            answer: "Yes"
        }
    }

    render() {
        return (
            <div>
                <h1>Is state important to know? {this.state.answer}</h1>
                {/*<ChildComponent answer={this.state.answer}/>*/}
            </div>
        )
    }
}

export default App

import React, {Component} from "react"

class App extends Component{
    constructor() {
        super()
        this.state = {
            name: "Sally",
            age: 13
        }
    }

    render() {
        return(
            <div>
                <h1>{this.state.name}</h1>
                <h3>{this.state.age} years old</h3>
            </div>
        )
    }
}

export default App

import React from "react"

class App extends React.Component{
    constructor(){
        super()
        this.state = {
            isLoggedIn:true
        }
    }

    render(){
        let wordDisplay
        if(this.state.isLoggedIn){
            wordDisplay="in"
        }else{
            wordDisplay="out"
        }
        return(
            <div>
                <h1>You are currently logged {wordDisplay}</h1>
            </div>
        )
    }
}

export default App

import React from "react"
import TodoItem from "./components/TodoItem"
import todosData from "./components/todosData"

class App extends React.Component{
    constructor() {
        super()
        this.state={
            todos: todosData
        }
    }

    render() {
        const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}/>)
        return(
            <div className={"todo-list"}>
                {todoItems}
            </div>
        )
    }
}

export default App

import React from "react"

function handleClick(){
    console.log("I was clicked")
}

// https://reactjs.org/docs/events.html#supported-events

function App(){
    return(
        <div>
            <img onMouseOver={() => console.log("Hovered!")}
                 src="https://www.fillmurray.com/200/100"/>
                 <br />
                 <br />
                 <button onClick={handleClick}>Click me</button>
        </div>
    )
}

export default App

import React from "react"

function TodoItem(props) {
    return (
        <div className="todo-item">
            <input
                type="checkbox"
                checked={props.item.completed}
                onChange={() => console.log("Changed!")}
            />
            <p>{props.item.text}</p>
        </div>
    )
}

export default TodoItem

import React from "react"

class App extends React.Component{
    constructor(){
        super()
        this.state={
            count:0
        }
        this.handleClick=this.handleClick.bind(this)
        this.doubles=this.doubles.bind(this)
    }

    handleClick(){
        this.setState(prevState => {
            return{
                count: prevState.count + 1
            }
        })
    }

    doubles(){
        this.setState(prevState => {
            return {
                count: prevState.count * 2
            }
        })
    }

    render(){
        return(
            <div>
                <h1>{this.state.count}</h1>
                <button onClick={this.handleClick}>Change!</button>
                <button onClick={this.doubles}>Double!</button>
            </div>
        )
    }
}

export default App

import React from "react"

function TodoItem(props) {
    return (
        <div className="todo-item">
            <input
                type="checkbox"
                checked={props.item.completed}
                onChange={() => props.handleChange(props.item.id)}
            />
            <p>{props.item.text}</p>
        </div>
    )
}

export default TodoItem

import React from "react"
import TodoItem from "./components/TodoItem"
import todosData from "./components/todosData"

class App extends React.Component {
    constructor() {
        super()
        this.state = {
            todos: todosData
        }
        this.handleChange = this.handleChange.bind(this)
    }

    handleChange(id) {
        this.setState(prevState => {
            const updatedTodos = prevState.todos.map(todo => {
                if (todo.id === id) {
                    return {
                        ...todo,
                        completed: !todo.completed
                    }
                }
                return todo
            })
            return {
                todos: updatedTodos
            }
        })
    }

    render() {
        const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item} handleChange={this.handleChange}/>)

        return (
            <div className="todo-list">
                {todoItems}
            </div>
        )
    }
}

import React, {Component} from "react"

// https://engineering.musefind.com/react-lifecycle-methods-how-and-when-to-use-them-2111a1b692b1
// https://reactjs.org/blog/2018/03/29/react-v-16-3.html#component-lifecycle-changes

class TodoList extends Component {
    constructor() {
        super()
        this.state = {}
    }

    static getDerivedStateFromProps(props, state) {
        // return the new, updated state based upon the props
        // https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops
        // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html
    }

    getSnapshotBeforeUpdate() {
        // create a backup of the current way things are
        // https://reactjs.org/docs/react-component.html#getsnapshotbeforeupdate
    }

    // componentWillMount() {

    // }

    componentDidMount() {
        // GET the data I need to correctly display
    }

    // componentWillReceiveProps(nextProps) {
    //     if (nextProps.whatever !== this.props.whatever) {
    //         // do something important here
    //     }
    // }

    shouldComponentUpdate(nextProps, nextState) {
        // return true if want it to update
        // return false if not
    }

    // componentWillUpdate() {

    // }

    componentWillUnmount() {
        // teardown or cleanup your code before your component disappears
        // (E.g. remove event listeners)
    }

    render() {
        return (
            <div>
                Code goes here
            </div>
        )
    }
}

export default App


export default App

import React from "react"
import randomcolor from "randomcolor"

class App extends React.Component{
    constructor(){
        super()
        this.state={
            count:0,
            color: ""
        }
        this.increment=this.increment.bind(this)
        this.decrement=this.decrement.bind(this)
        this.doubles=this.doubles.bind(this)
    }

    increment(){
        this.setState(prevState => {
            return{
                count: prevState.count + 1
            }
        })
    }

    decrement(){
        this.setState(prevState => {
            return{
                count: prevState.count - 1
            }
        })
    }

    doubles(){
        this.setState(prevState => {
            return {
                count: prevState.count * 2
            }
        })
    }

    componentDidUpdate(prevProps,prevState){
        if(prevState.count !== this.state.count) {
            const newColor = randomcolor()
            this.setState({color: newColor})
        }
    }

    render(){
        return(
            <div>
                <h1 style={{color: this.state.color}}>{this.state.count}</h1>
                <button onClick={this.increment}>Increment!</button>
                <button onClick={this.decrement}>Decrement!</button>
                <button onClick={this.doubles}>Double!</button>
            </div>
        )
    }
}

export default App

import React from "react"

function conditional(props) {
    // condition ? statement if true : statement if false
    return(props.isLoading === true ? <h1>Loading...</h1> : <h1>Some cool stuff about conditional rendering!</h1>)
    // if(props.isLoading === true) {
    //     return(
    //         <h1>Loading...</h1>
    //     )
    // }
    // return(
    //     <h1>Some cool stuff about conditional rendering!</h1>
    // )
}

export default conditional

import React, {Component} from "react";
import conditional from "./components/conditional";

class App extends Component{
    constructor() {
        super()
        this.state = {
            isLoading: true
        }
    }

    componentDidMount() {
        setTimeout(() => {
            this.setState({
                isLoading: false
            })
        }, 1500)
    }

    render() {
        return(
            <div>
                <conditional isLoading={this.state.isLoading}/>
            </div>
        )
    }
}

export default App

import React from "react"

function conditional(props) {
    return <h1>Some cool stuff about conditional rendering</h1>
}

export default conditional

import React, {Component} from "react";
import conditional from "./components/conditional";

class App extends Component {
    constructor() {
        super()
        this.state = {
            unreadMessages: ["a", "b"]
        }
    }
    // &&
    // false && false
    render() {
        return (
            <div>
                {
                    this.state.unreadMessages.length > 0 &&
                    <h2>You have {this.state.unreadMessages.length} unread messages!</h2>
                }
            </div>
        )
    }
}

export default App


body {
    background-color: whitesmoke;
}

.todo-list {
    background-color: white;
    margin: auto;
    width: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    border: 1px solid #efefef;
    box-shadow:
        /* The top layer shadow */
            0 1px 1px rgba(0,0,0,0.15),
                /* The second layer */
            0 10px 0 -5px #eee,
                /* The second layer shadow */
            0 10px 1px -4px rgba(0,0,0,0.15),
                /* The third layer */
            0 20px 0 -10px #eee,
                /* The third layer shadow */
            0 20px 1px -9px rgba(0,0,0,0.15);
    padding: 30px;
}

.todo-item {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    padding: 30px 20px 0;
    width: 70%;
    border-bottom: 1px solid #cecece;
    font-family: Roboto, sans-serif;
    font-weight: 100;
    font-size: 15px;
    color: #333333;
}

input[type=checkbox] {
    margin-right: 10px;
    font-size: 30px;
}

input[type=checkbox]:focus {
    outline: 0;
}

body {
    margin: 0;
}

.contacts {
    display: flex;
    flex-wrap: wrap;
}

.contact-card {
    flex-basis: 250px;
    margin: 20px;
}

.contact-card > img {
    width: 100%;
    height: auto;
}

.contact-card > h3 {
    text-align: center;
}

.contact-card > p {
    font-size: 12px;
}